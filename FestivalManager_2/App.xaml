<Application x:Class="FestivalManager_2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:v="clr-namespace:FestivalManager_2.View"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>       

        <Style x:Key="Algemeen_Textblock" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="100" />
        </Style>

        <Style x:Key="Algemeen_Titel_Textblock" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="Validate_Textbox" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="BorderBrush" Value="#FFD81F1F" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Background" Value="#FFE46060" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Algemeen_Textbox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource Validate_Textbox}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="25" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Top" />            
        </Style>        

        <Style x:Key="Algemeen_ComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>

        <Style x:Key="Lijn_Stretched" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Height" Value="1" />
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />                            
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5" />
                            </Trigger>                      
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SaveButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="31" />
            <Setter Property="Width" Value="31" />
            <Setter Property="Margin" Value="0,10,10,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Image Source="/Images/save.png" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>                 
                </Setter.Value>
            </Setter>            
        </Style>
        
        <Style x:Key="ReturnButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="45" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Margin" Value="-120,0,0,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Image Source="/Images/Logo.png" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="45" />
            <Setter Property="Width" Value="45" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Image Source="/Images/Delete-icon.png" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxWithNoSelection" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="LayoutRoot" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentControl x:Name="ContentContainer"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" 
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        Margin="{TemplateBinding Padding}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="List_Grid_Groepen">
            <Border BorderBrush="Black" BorderThickness="1" Margin="0,0,0,10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35" />
                        <RowDefinition Height="35" />
                    </Grid.RowDefinitions>
                    <Image Grid.RowSpan="2" HorizontalAlignment="Left" Height="50" Margin="20,10,0,0" VerticalAlignment="Top" Width="50" Source="Images/person-icon.png"  />
                    <Image Grid.Column="3" Grid.RowSpan="2" HorizontalAlignment="Left" Height="30" Margin="15,20,0,0" VerticalAlignment="Top" Width="30"/>
                    <TextBlock Margin="10,10,10,0" Text="Groepnaam" Grid.Row="0" Grid.Column="1" FontSize="18" />
                    <TextBlock Margin="25,0,0,0" Text="Genre 1, Genre 2, Genre 3" Grid.Row="1" Grid.Column="1" FontSize="16" Foreground="#CF000000"/>
                    <Grid Grid.RowSpan="2" Grid.Column="2" Margin="0,5,10,5">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Margin="25,0,0,0" Text="13/10/2013" Grid.Row="0" Grid.Column="2" FontSize="14" Foreground="#CF000000" HorizontalAlignment="Right"/>
                        <TextBlock Margin="25,0,0,0" Text="Zondag" Grid.Row="1" Grid.Column="2" FontSize="14" Foreground="#CF000000" HorizontalAlignment="Right"/>
                        <TextBlock Margin="25,0,0,0" Text="16:00" Grid.Row="2" Grid.Column="2" FontSize="14" Foreground="#CF000000" HorizontalAlignment="Right"/>
                    </Grid>
                    <Rectangle Grid.Column="3" Grid.RowSpan="2" Width="1" VerticalAlignment="Stretch" Margin="0,5,0,5" HorizontalAlignment="Left" Fill="Black"/>
                </Grid>
            </Border>
        </DataTemplate>       

        <Storyboard x:Key="LoadingAnimation"></Storyboard>
        
    </Application.Resources>
</Application>
